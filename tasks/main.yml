---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- import_tasks: db_setup.yml
  when:
    - "monasca_services['monasca-api']['group'] in group_names"
    - "inventory_hostname == ((groups[monasca_services['monasca-api']['group']]| intersect(ansible_play_hosts)) | list)[0]"
  vars:
    _oslodb_setup_host: "{{ monasca_db_setup_host }}"
    _oslodb_databases:
      - name: "{{ monasca_galera_database }}"
        users:
          - username: "{{ monasca_galera_user }}"
            password: "{{ monasca_container_mysql_password }}"
  tags:
    - monasca-config

- import_tasks: monasca_pre_install.yml
  tags:
    - monasca-install

- name: Install the python venv
  import_role:
    name: "python_venv_build"
  vars:
    venv_python_executable: "{{ monasca_venv_python_executable }}"
    venv_build_constraints: "{{ monasca_git_constraints }}"
    venv_install_destination_path: "{{ monasca_bin | dirname }}"
    venv_install_distro_package_list: "{{ monasca_distro_packages }}"
    venv_pip_install_args: "{{ monasca_pip_install_args }}"
    venv_pip_packages: "{{ monasca_pip_packages }}"
#    venv_pip_packages: >-
#      "{{ monasca_pip_packages |
#            union(monasca_user_pip_packages)}}"
    venv_facts_when_changed:
      - section: "monasca"
        option: "venv_tag"
        value: "{{ monasca_venv_tag }}"

- import_tasks: monasca_thresh_install.yml
  tags:
    - monasca-install

- import_tasks: monasca_post_install.yml
  tags:
    - monasca-config

- name: Run the systemd service role
  include_role:
    name: systemd_service
  vars:
    systemd_user_name: "{{ monasca_system_user_name }}"
    systemd_group_name: "{{ monasca_system_group_name }}"
    systemd_tempd_prefix: openstack
    systemd_slice_name: monasca
    systemd_lock_path: /var/lock/monasca
    systemd_CPUAccounting: true
    systemd_BlockIOAccounting: true
    systemd_MemoryAccounting: true
    systemd_TasksAccounting: true
    systemd_services:
      - service_name: "{{ service_var.service_name }}"
        enabled: yes
        state: started
        execstarts: "{{ service_var.execstarts }}"
        config_overrides: "{{ service_var.init_config_overrides }}"
  with_items: "{{ filtered_monasca_services }}"
  loop_control:
    loop_var: service_var
  tags:
    - monasca-config
    - systemd-service

- import_tasks: monasca_influxdb_setup.yml
  vars:
    ansible_python_interpreter: "{{ monasca_bin }}/python"
  tags:
    - monasca-config

- import_tasks: monasca_copy_mysql_schema.yml
  tags:
    - monasca-config

- import_tasks: monasca_kafka_setup.yml
  tags:
    - monasca-config
  when:
    - inventory_hostname == (groups['monasca_all'] | intersect(ansible_play_hosts))[0]

- import_tasks: service_setup.yml
  vars:
    _service_adminuri_insecure: "{{ keystone_service_adminuri_insecure }}"
    _service_in_ldap: "{{ monasca_service_in_ldap }}"
    _service_setup_host: "{{ monasca_service_setup_host }}"
    _service_setup_host_python_interpreter: "{{ monasca_service_setup_host_python_interpreter }}"
    _service_project_name: "{{ monasca_service_project_name }}"
    _service_region: "{{ monasca_service_region }}"
    _service_users:
      - name: "{{ monasca_service_user_name }}"
        password: "{{ monasca_service_password }}"
        role: "{{ monasca_role_name }}"
      - name: "{{ monasca_agent_user_name }}"
        password: "{{ monasca_agent_password }}"
        role: "{{ monasca_agent_roles }}"
    _service_endpoints:
      - service: "{{ monasca_service_name }}"
        interface: "public"
        url: "{{ monasca_service_publicurl }}"
      - service: "{{ monasca_service_name }}"
        interface: "internal"
        url: "{{ monasca_service_internalurl }}"
      - service: "{{ monasca_service_name }}"
        interface: "admin"
        url: "{{ monasca_service_adminurl }}"
    _service_catalog:
      - name: "{{ monasca_service_name }}"
        type: "{{ monasca_service_type }}"
        description: "{{ monasca_service_description }}"
  when: inventory_hostname == groups['monasca_all'][0]
  tags:
    - monasca-config

- name: Import uwsgi role
  import_role:
    name: uwsgi
  vars:
    uwsgi_services: "{{ uwsgi_monasca_services }}"
    uwsgi_install_method: "{{ monasca_install_method }}"
  tags:
    - monasca-install
    - monasca-config
    - uwsgi

- name: Flush handlers
  meta: flush_handlers

- import_tasks: monasca_alarms_setup.yml
  when: inventory_hostname == groups['monasca_api'][0]
  tags:
    - monasca-alarms

